include /_entry.pug

doctype html
html(lang=_.get(siteSettings, 'site-lang', 'en'))
	head
		block head
			meta(charset="utf-8")
			meta(name="viewport" content="width=device-width, initial-scale=1")
			link(rel="stylesheet" href=assets.url('dist/style.css'))
			link(rel="stylesheet" href=assets.url(`dist/highlight.js/styles/${_.get(siteSettings, 'code-highlight-theme', 'github')}.css`))
			if siteCss && siteCss.length > 0
				link(rel="stylesheet" href=`/custom.css?rev=${revHash(siteCss.join('\n'))}`)
			noscript
				//- normally, it's conditionally loaded via js to save traffic
				link(rel="stylesheet" href=assets.url('dist/katex/dist/katex.css'))
			if siteSettings
				block title
					-
						const name = obj && obj.deleted ? 'Deleted'
							: (_.includes(obj && obj.type, 'h-x-dynamic-feed')
								? helpers.insertParams(_.get(obj, 'properties.name[0]', 'Unnamed feed'), reqUriFull.search(true))
								: helpers.entryName(obj))
					title= `${name} / ${siteSettings['site-name']}`
			if domainUri
				link(rel="openid.delegate" href=domainUri.toString())
			link(rel="openid.server" href="https://openid.indieauth.com/openid")
			each fmtlink in granaries || []
				link(rel="alternate" type=fmtlink.type href=`${fmtlink.base}&url=${encodeURIComponent(reqUri.toString())}`)
			if authedAsAdmin
				link(rel='manifest' href=assets.url('dist/micro-panel/manifest.json'))
				link(rel='apple-touch-icon' sizes='180x180' href=assets.url('dist/micro-panel/icons/apple-touch-icon.png'))
				link(rel='mask-icon' href=assets.url('dist/micro-panel/icons/mask-icon.svg') color='#5bbad5')
				link(rel='icon' type='image/x-icon' href=assets.url('dist/micro-panel/icons/favicon.ico'))
				link(rel='icon' type='image/png' sizes='32x32' href=assets.url('dist/micro-panel/icons/favicon-32x32.png'))
				meta(name='theme-color' content='#00897b')
				meta(name='vapid-pubkey' content=vapidKeys.publicKey)
	body
		if authedAsAdmin
			micro-panel-toolbar
			micro-panel-editor(hidden micropub='/micropub' media=mediaEndpoint mediatoken=mediaAuthToken)
		block body
			.site-content("class"=obj && obj.type)
				header#author.site-header.h-card.p-author
					block author
						| !{helpers.getHtml(_.get(siteCard, 'properties.note[0]'))}
						- const photo = _.get(siteCard, 'properties.photo[0]')
						if photo
							data.u-photo(value=photo)
				main.site-main
					block main
						nav.main-nav
							each feed in _.sortBy(siteFeeds || [], f => _.get(f, 'properties.feed-settings[0].order-in-nav', 0))
								- const isCurrentPage = reqUri.equals(_.get(feed, 'properties.url[0]'))
								if _.get(feed, 'properties.feed-settings[0].show-in-nav') !== false || isCurrentPage
									- const name = helpers.insertParams(_.get(feed, 'properties.name[0]', 'Unnamed feed'), reqUriFull.search(true))
									|  
									if isCurrentPage
										span= name
										data.p-name(value=`${name} / ${siteSettings && siteSettings['site-name']}`)
									else
										a(href=relativeUrl(_.get(feed, 'properties.url[0]')) rel="feed" type="text/html" title=`${name} / ${siteSettings && siteSettings['site-name']}`)= name
				block site-tags
					nav.site-tags
						- const tagfeed = _.head(helpers.matchingFeeds(siteFeeds, {properties: {category: ['--TAG-HERE--']}}).filter(feed => !(_.get(feed, 'params.tag', '').startsWith('_'))))
						if tagfeed
							for tag in siteTags || []
								if !tag.name.startsWith('_')
									a(href=relativeUrl(tagfeed.url.replace('--TAG-HERE--', tag.name)) data-mf-category=tag.name)
										= tagfeed.name.replace('--TAG-HERE--', tag.name)
										sup.obj_count= `(${tag.obj_count})`
									| 
				footer.site-footer
					block search-form
						form(method="get" action="/search").search-form
							.form-field
								input(name="q" type="search" value=searchQuery)
								button Search
					block login-form
						if auth
							form(method="post" action="/logout").logout-form
								button Log out
						else if domainUri
							a(href="#login-form").login-link Log in
							form(method="get" action=indieAuthEndpoint).login-form#login-form
								input(type="hidden" name="client_id" value=domainUri.toString())
								input(type="hidden" name="redirect_uri" value=domainUri.clone().path('/login/self').toString())
								input(type="hidden" name="scope" value="create update delete undelete")
								input(type="hidden" name="state" value="TODO")
								.form-field
									input(type="url" name="me" value=domainUri.toString())
									button Log in
					.site-meta.
						This website supports #[a(href="https://webmention.net") Webmentions]!
						Because it's powered by #[a(href="https://github.com/myfreeweb/sweetroll") Sweetroll], an #[a(href="https://indieweb.org") #IndieWeb] engine.


			block scripts
				script(defer src=assets.url('dist/site.js'))
				script(defer src=assets.url('dist/svgxuse/svgxuse.min.js'))
